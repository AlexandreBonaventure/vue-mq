{"version":3,"file":"vue-mq.min.js","sources":["../node_modules/string-convert/camel2hyphen.js","../node_modules/json2mq/index.js","../src/helpers.js","../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["var camel2hyphen = function (str) {\n  return str\n          .replace(/[A-Z]/g, function (match) {\n            return '-' + match.toLowerCase();\n          })\n          .toLowerCase();\n};\n\nmodule.exports = camel2hyphen;","var camel2hyphen = require('string-convert/camel2hyphen');\n\nvar isDimension = function (feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function (obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature);\n    // Add px to dimension features\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n    if (index < features.length-1) {\n      mq += ' and '\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function (query) {\n  var mq = '';\n  if (typeof query === 'string') {\n    return query;\n  }\n  // Handling array of media queries\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n      if (index < query.length-1) {\n        mq += ', '\n      }\n    });\n    return mq;\n  }\n  // Handling single media query\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;","import json2mq from 'json2mq'\n\nexport function convertBreakpointsToMediaQueries(breakpoints) {\n  const keys = Object.keys(breakpoints)\n  const values = keys.map(key => breakpoints[key])\n  const breakpointValues = [0, ...values.slice(0, -1)]\n  const mediaQueries = breakpointValues.reduce((sum, value, index) => {\n    const options = Object.assign(\n      {\n        minWidth: value,\n      },\n      index < keys.length - 1 ? { maxWidth: breakpointValues[index+1] - 1 } : {}\n    )\n    const mediaQuery = json2mq(options)\n    return Object.assign(\n      sum,\n      {\n        [keys[index]]: mediaQuery,\n      }\n    )\n  }, {})\n  return mediaQueries\n}\n\nexport function transformValuesFromBreakpoints(breakpoints, values, currentBreakpoint) {\n  const findClosestValue = (currentBreakpoint) => {\n    if (values[currentBreakpoint] !== undefined) return values[currentBreakpoint]\n    const index = breakpoints.findIndex(b => b === currentBreakpoint)\n    const newBreakpoint = index !== -1 || index !== 0 ? breakpoints[index-1] : null\n    if (!newBreakpoint) return values[index]\n    return values[newBreakpoint] !== undefined ? values[newBreakpoint] : findClosestValue(newBreakpoint)\n  }\n  return findClosestValue(currentBreakpoint)\n}\n\nexport function selectBreakpoints(breakpoints, currentBreakpoint) {\n  const index = breakpoints.findIndex(b => b === currentBreakpoint)\n  return breakpoints.slice(index)\n}\n\nexport function subscribeToMediaQuery(mediaQuery, enter) {\n  const mql = window.matchMedia(mediaQuery)\n  const cb = ({ matches }) => {\n    if (matches) enter()\n  }\n  mql.addListener(cb) //subscribing\n  cb(mql) //initial trigger\n}","export function isArray (arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n}\n","// USAGE\n// mq-layout(mq=\"lg\")\n//   p Iâ€™m lg\nimport { selectBreakpoints } from './helpers'\nimport { isArray } from './utils';\nconst component = {\n  props: {\n    mq: {\n      required: true,\n      type: [String, Array],\n    }\n  },\n  computed: {\n    plusModifier() { return !isArray(this.mq) && this.mq.slice(-1) === '+' },\n    activeBreakpoints() {\n      const breakpoints = Object.keys(this.$mqAvailableBreakpoints)\n      const mq = this.plusModifier ? this.mq.slice(0, -1) : (isArray(this.mq) ? this.mq : [this.mq])\n      return this.plusModifier\n        ? selectBreakpoints(breakpoints, mq)\n        : mq\n    }\n  },\n  render(h, props) {\n    const shouldRenderChildren = this.activeBreakpoints.includes(this.$mq)\n    return shouldRenderChildren ? h('div', this.$slots.default) : h()\n  },\n}\n\nexport default component\n","import { subscribeToMediaQuery, convertBreakpointsToMediaQueries, transformValuesFromBreakpoints } from './helpers.js'\nimport MqLayout from './component.js'\n\nconst DEFAULT_BREAKPOINT = {\n  sm: 450,\n  md: 1250,\n  lg: Infinity,\n}\n\nconst install = function (Vue, { breakpoints = DEFAULT_BREAKPOINT, defaultBreakpoint = 'sm' } = {}) {\n  let hasSetupListeners = false\n  // Init reactive component\n  const reactorComponent = new Vue({\n    data: () => ({\n      defaultBreakpoint: defaultBreakpoint,\n      currentBreakpoint: defaultBreakpoint,\n    }),\n    methods: {\n      update(breakpoint, type = 'currentBreakpoint') {\n        const isTypeValid = Object.keys(this.$data).includes(type)\n        const isBreakPointValid = Object.keys(breakpoints).includes(breakpoint)\n        if (isTypeValid && isBreakPointValid) {\n          this.$data[type] = breakpoint\n        }\n      }\n    }\n  })\n  Vue.filter('mq', (currentBreakpoint, values) => {\n    return transformValuesFromBreakpoints(Object.keys(breakpoints), values, currentBreakpoint)\n  })\n  Vue.mixin({\n    computed: {\n      $mq() {\n        return reactorComponent.currentBreakpoint\n      },\n    },\n    created () {\n      if (this.$isServer) reactorComponent.currentBreakpoint = reactorComponent.defaultBreakpoint\n    },\n    mounted() {\n      if (!hasSetupListeners) {\n        const mediaQueries = convertBreakpointsToMediaQueries(breakpoints)\n        // setup listeners\n        for (const key in mediaQueries) {\n          const mediaQuery = mediaQueries[key]\n          const enter = () => { reactorComponent.currentBreakpoint = key }\n          subscribeToMediaQuery(mediaQuery, enter)\n        }\n        hasSetupListeners = true\n      }\n    }\n  })\n  Vue.prototype.$mqAvailableBreakpoints = breakpoints\n  Vue.prototype.$mqUpdateCurrentBreakpoint = breakpoint =>\n    reactorComponent.update(breakpoint, 'currentBreakpoint')\n  Vue.prototype.$mqUpdateDefaultBreakpoint = breakpoint =>\n    reactorComponent.update(breakpoint, 'defaultBreakpoint')\n  Vue.component('MqLayout', MqLayout)\n}\n\nexport default { install }\n"],"names":["str","replace","match","toLowerCase","obj2mq","obj","mq","features","Object","keys","forEach","feature","index","value","test","isDimension","camel2hyphen","length","query","Array","q","convertBreakpointsToMediaQueries","breakpoints","values","map","key","breakpointValues","slice","reduce","sum","options","assign","minWidth","maxWidth","mediaQuery","json2mq","isArray","arg","prototype","toString","call","component","props","required","type","String","computed","plusModifier","this","activeBreakpoints","$mqAvailableBreakpoints","currentBreakpoint","findIndex","b","selectBreakpoints","render","h","includes","$mq","$slots","default","DEFAULT_BREAKPOINT","sm","md","lg","Infinity","install","Vue","defaultBreakpoint","hasSetupListeners","reactorComponent","data","methods","update","breakpoint","isTypeValid","$data","isBreakPointValid","filter","findClosestValue","undefined","newBreakpoint","transformValuesFromBreakpoints","mixin","created","$isServer","mounted","mediaQueries","enter","mql","window","matchMedia","cb","matches","addListener","subscribeToMediaQuery","$mqUpdateCurrentBreakpoint","$mqUpdateDefaultBreakpoint","MqLayout"],"mappings":"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"}